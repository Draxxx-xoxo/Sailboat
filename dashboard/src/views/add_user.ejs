<%- include('partials/header') -%>
<%- include('partials/nav') -%>
<html>
    <form onsubmit="submitdata(); return false";>
        <label for="userID">UserID</label><br>
        <input class="input is-primary is-rounded" type="text" id="userID" name="userID" required><br>
        <label for="permissions">User Permissions</label>
        <select name="permissions" id="permissions"><br>
            <option value="editor">Editor</option>
            <option value="viewer">Viewer</option>
        </select><br>
        <input type="submit" value="Submit">
    </form>
    <table>
        <style>
            table {
                border-collapse: collapse;
                width: 50%;
                left: 0px;
                margin-left: auto;
                margin-right: auto;
            }
            th, td {
            border: 1px solid;
            }
            tr:hover {background-color: coral;}
        </style>
        <script>
    
            function generateTableHead(table, data) {
            let thead = table.createTHead();
            let row = thead.insertRow();
            for (let key of data) {
                let th = document.createElement("th");
                let text = document.createTextNode(key);
                th.appendChild(text);
                row.appendChild(th);
            }
            }
    
            function generateTable(table, data) {
            for (let element of data) {
                let row = table.insertRow();
                for (key in element) {
                let cell = row.insertCell();
                let text = document.createTextNode(element[key]);
                cell.appendChild(text);
                }
            }
            }
            const currentURL = window.location.href
            var guildid = window.location.pathname.split('/');
            const Http = new XMLHttpRequest();
            const url = `http://localhost:1337/api/allowed-users?filters[guild_id][$eq]=${guildid[1]}`
            Http.open("Get", url);
            Http.setRequestHeader("Authorization", 'bearer 822ca389f5560fec7410bd387bdac30cf87379d1608de0b400b903549af53bff5942217c08fdf0fc1ecf3f06b681e0684c1c15a7a6dd1c74533524abe31f93bcf0484c0f63861763afa589ba6750879d6c224fa4ad2f3b7787c32fe518ab6115b98bd6b44e1d0fad3f1cd68a5dafa251c0268e815b7e1c057b7573f91198ed61');
            Http.send();
            Http.onload = () => {
                if (Http.readyState === Http.DONE) {
                if (Http.status === 200) {

                const Users = []
                    var response = JSON.parse(Http.responseText);
                    var Array = response.data;
                    for (let i = 0; i < Array.length; i++){
                        var user = {
                            "ID": Array[i].id,
                            "Discord ID": Array[i].attributes.UserID,
                            //"discord_tag": Array[i].attributes.discord_tag,
                            "Permissions": Array[i].attributes.permissionID,
                            //"infractions": Array[i].attributes.infractions,
                            //"moderator_id": Array[i].attributes.moderator_id,
                            //"moderator_tag": Array[i].attributes.moderator_tag,
                            //"reason": Array[i].attributes.reason,
                            //"guild_id": Array[i].attributes.guild_id,
                        }
                        
                        Users.push(user);
                    }
                    let table = document.querySelector("table");
                    let data = Object.keys(Users[0]);
                    generateTable(table, Users);
                    generateTableHead(table, data);
                }}
            }; 
    
        </script>
    </table>
    <script>
        async function submitdata(){
            const userID = document.getElementById("userID").value
            var permissions = document.getElementById("permissions").value
            if(permissions == 'editor'){
                permissions = 0
            }
            else if(permissions == 'viewer'){
                permissions = 1
            }
            const Http = new XMLHttpRequest();
            var guildid = (window.location.pathname.split('/'))[1];
            const geturl = `http://localhost:1337/api/allowed-users?filters[UserID][$eq]=${userID}&filters[guild_id][$eq]=${guildid}`
            await Http.open("Get", geturl);
            Http.setRequestHeader("Authorization", 'bearer 822ca389f5560fec7410bd387bdac30cf87379d1608de0b400b903549af53bff5942217c08fdf0fc1ecf3f06b681e0684c1c15a7a6dd1c74533524abe31f93bcf0484c0f63861763afa589ba6750879d6c224fa4ad2f3b7787c32fe518ab6115b98bd6b44e1d0fad3f1cd68a5dafa251c0268e815b7e1c057b7573f91198ed61');
            Http.setRequestHeader("Content-type", "application/json");
            await Http.send();
            Http.onload = () => {
                if (Http.readyState === Http.DONE) {
                if (Http.status === 200) {
                    var response = JSON.parse(Http.responseText);
                    console.log(response.data.length)
                    if(response.data.length > 0){
                        return alert('User already has access to dashboard. Contact Support if you believe this is an error')
                    } else {
                        const posturl = `http://localhost:1337/api/allowed-users`
                        Http.open("Post", posturl);
                        Http.setRequestHeader("Authorization", 'bearer 822ca389f5560fec7410bd387bdac30cf87379d1608de0b400b903549af53bff5942217c08fdf0fc1ecf3f06b681e0684c1c15a7a6dd1c74533524abe31f93bcf0484c0f63861763afa589ba6750879d6c224fa4ad2f3b7787c32fe518ab6115b98bd6b44e1d0fad3f1cd68a5dafa251c0268e815b7e1c057b7573f91198ed61');
                        Http.setRequestHeader("Content-type", "application/json");
                        const data = `
                        {
                            "data": {
                            "guildID": "${guildid}", 
                            "UserID": "${userID}", 
                            "permissionID": ${permissions}
                            }
                        }
                        `   
                        console.log(data)
                        Http.send(data);
                        Http.onload = () => {
                            if (Http.readyState === Http.DONE) {
                                if (Http.status === 200) {
                                    var response = JSON.parse(Http.responseText);
                                    console.log(response)
                                }
                            }
                        };
                    }
                }
                }
            };
            return false;
        }
    </script>
</html>
<%- include('partials/footer') -%>